This update contains firware changes to support TNFS menus which extends 
Gopher-like functionality to the FujiNet disk images browser. Like Gopher
menus, TNFS menus are line based, with each line defining the type, name, and
location of a menu resource.

This change is backwards compatible with existing config applications. 

Menu item format: [<type|]<name>[|<resource>]

    <type>     : 16 bit integer value indicating the menu item type. Optional.
                 If the type field is not present, the type is assumed to be 0.
    <name>     : A friendly name for the item that will be displayed by a menu
                 brower. The <display> text must not contain the pipe ('\') 
                 symbol, and must be less than 80 characters. 
    <resource> : String describing the item to be accessed by the menu browser.
                 Optional. If the <item> field is not present, it is set 
                 to be equal to the <display> field. 

Menu item types supported in this update:

    0000 : Line of plain text to be displayed by the TNFS browser. 
    0001 : Local file folder. <item> is the name of the folder.
    0002 : A file, of any type. File types are already defined in the 
           extended type fields.
    0003 : TNFS host link. Resource is the TNFS hostname. 
    7F7F : End of menu. Optional.

    The type field can be omitted, the default type is 0000. 

    Clients that have not been updated to support menu types will see 
    both 0000 and 0002 types as regular files.

Code changes:

lib/fuji/fujiHost.cpp

  * Update dir_tell method to use a menu if one has been opened.
  * Update dir_seek method to use a menu if one has been opened.
  * Update method dir_nextfile
    * If menu is initialized, use menu get_next_menu_entry()
  * Added method get_menu to access menu functions

lib/fuji/fujiHost.h

  * Add new _menu data menber.
  * Add new method get_menu_initialized()

lib/fuji/fujiMenu.cpp lib/fuji/fujiMenu.h

  * New class implementing new menu interactions. 
  * Manage menu file access
  * Keep offset and position state for menu browsing

